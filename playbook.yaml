---
- name: Create VM infrastructure in GCP with Terraform
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - debug: var=tfvars
    - name: Terraform apply
      community.general.terraform:
        state: present
        force_init: true
        project_path: terraform/
        variables: "{{ tfvars | lower }}"
      register: tfapply

    - name: Add instance to inventory
      ansible.builtin.add_host:
        name: "{{ tfapply.outputs.instance_ip_address.value }}"
        groups: nodes

- name: Wait for instance to become ready
  hosts: nodes
  gather_facts: false
  vars:
    ansible_ssh_common_args: "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

  tasks:
    - name: Wait for connection
      ansible.builtin.wait_for_connection:
        delay: 10
        timeout: 300

- name: Configure instance with ansible
  hosts: nodes
  vars:
    ansible_ssh_common_args: "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

  roles:
    - RnodeC.beranode

- name: Destroy VM infrastructure in GCP with Terraform
  hosts: localhost
  connection: local
  gather_facts: false
  tags: ['never', 'down']

  tasks:
    - name: Terraform Destroy
      community.general.terraform:
        state: absent
        project_path: terraform/
        variables: "{{ tfvars | lower }}"
